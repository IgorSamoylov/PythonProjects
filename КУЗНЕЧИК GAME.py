

L = [0 for x in range(31)]

def jump_count(L: list):
    """Вычисляет количество возможных вариантов добраться до конца списка,
        делая прыжки на 1 или 2 клетки с начала """
    L[1] = 1 # Вручную указываем начало массива: в первую клетку можно попасть 1 вариантом
    L[2] = 2 # Во второую клетку можно попасть 2 вариантами: 2 по 1 или одни прыжок на 2

    for x in range(3, len(L)):
        L[x] = L[x - 1] + L[x - 2] # Первый и второй вариант попасть в клетку 3 + их значения

    return L[-1]

print(jump_count(L))



blocked = [4, 7, 10, 25, 27]

def jump_count_advanced(blocked: list):
    """ Вычисляет количество возможных вариантов добраться из первой в последнюю
    клетку с учётом запрещенных части из клеток и возможности прыгать на 1, 2, 3 клетки
    Например в L[5] можно попасть 6-ю способами:
    1 1 1 2   2 1 2   3 2   2 3  1 1 3   1 2 2  """
    L = [0 for x in range(31)]
    L[1] = 1
    L[2] = 2
    L[3] = 4 # В клетку 3 можно попасть 4-мя различными способами: 1+1+1, 1+2, 2+1, 3
    for x in range(4, len(L)):
        if x not in blocked: # Если клетка заблокирована, то просто ее пропускаем
            L[x] = L[x - 1] + L[x - 2] + L[x - 3]

    print(L)
    return L[-1]


print(jump_count_advanced(blocked)) 
